// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Web.Api.Data.Migrations
{
    [DbContext(typeof(SallaryCQRSAppContext))]
    partial class SallaryCQRSAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("Domain.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("Domain.Models.BudgetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("BudgetItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7203),
                            Name = "اجر وظيفى "
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7205),
                            Name = "اجر مكمل"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7206),
                            Name = "أجر تعويضى"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7207),
                            Name = "جزاء"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7208),
                            Name = "إيرادات"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7209),
                            Name = "مرتدات"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7210),
                            Name = "أسترداد"
                        });
                });

            modelBuilder.Entity("Domain.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Collection");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4873),
                            Name = "مرتبات بطاقات حكوميه"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4875),
                            Name = "مرتبات تحويلات بنكيه"
                        });
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CollageName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeBankId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("QanonId")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("TabCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("TegaraCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBankId")
                        .IsUnique()
                        .HasFilter("[EmployeeBankId] IS NOT NULL");

                    b.HasIndex("NationalId")
                        .IsUnique();

                    b.HasIndex("QanonId");

                    b.HasIndex("TabCode")
                        .IsUnique()
                        .HasFilter("[TabCode] IS NOT NULL");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("EmployeeBankAccounts");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBasicFinancialData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialDataTypesId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDataTypesId");

                    b.HasIndex("EmployeeId", "FinancialDataTypesId")
                        .IsUnique();

                    b.ToTable("EmployeeBasicFinancialData");
                });

            modelBuilder.Entity("Domain.Models.EmployeeCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeOrderInCollection")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("EmployeeId", "CollectionId")
                        .IsUnique();

                    b.ToTable("EmployeeCollections");
                });

            modelBuilder.Entity("Domain.Models.EmployeeGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeGradeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartFrom")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeGradeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("EmployeeId", "GradeId")
                        .IsUnique();

                    b.ToTable("EmployeeGrades");
                });

            modelBuilder.Entity("Domain.Models.EmployeeVacationExecuation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetItemId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormEmployeeVacationId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BudgetItemId");

                    b.HasIndex("FormEmployeeVacationId");

                    b.ToTable("EmployeeVacationExecuation");
                });

            modelBuilder.Entity("Domain.Models.FinancialDataType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentFinancialDataTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("QanonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentFinancialDataTypeId");

                    b.HasIndex("QanonId");

                    b.ToTable("FinancialDataTypes");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7256),
                            Name = "اجر وظيفى ",
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7258),
                            Name = "اجر مكمل",
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7260),
                            Name = "اجمالى الاجر ",
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7261),
                            Name = "حافز تعويضى",
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7262),
                            Name = "اجر الشامل",
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1002,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7264),
                            Name = "الاساسى",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1003,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7266),
                            Name = "100% من الاساسى",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1004,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7267),
                            Name = "بدل حد ادنى",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1005,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7274),
                            Name = "علاوات غير مضمومه",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1006,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7275),
                            Name = "بدل علاوة اجتماعيه و منحة",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1007,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7281),
                            Name = "علاوة دوريه 2015",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1008,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7295),
                            Name = "علاوة دوريه 2016",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2016, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1009,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7297),
                            Name = "علاوة دوريه 2017",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2017, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1010,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7298),
                            Name = "علاوة استثنائيه 2017",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2017, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1011,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7300),
                            Name = "علاوة دوريه 2018",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2018, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1012,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7301),
                            Name = "علاوة استثنائيه 2018",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2018, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1013,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7302),
                            Name = "علاوة دوريه 2019",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1014,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7304),
                            Name = "علاوة دوريه 2020",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1015,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7305),
                            Name = "علاوة دوريه 2021",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1016,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7307),
                            Name = "علاوة دوريه 2022",
                            ParentFinancialDataTypeId = 1000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3001,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7308),
                            Name = "الاساسى",
                            ParentFinancialDataTypeId = 3000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3002,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7310),
                            Name = "علاوات غير مضمومه",
                            ParentFinancialDataTypeId = 3000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3003,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7311),
                            Name = "المنحة",
                            ParentFinancialDataTypeId = 3000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3004,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7312),
                            Name = "علاوة اجتماعيه",
                            ParentFinancialDataTypeId = 3000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3005,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7314),
                            Name = "علاوة اضافيه",
                            ParentFinancialDataTypeId = 3000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3006,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7315),
                            Name = "بدل عدوى",
                            ParentFinancialDataTypeId = 3000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3007,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7317),
                            Name = "150% من الاساسى",
                            ParentFinancialDataTypeId = 3000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2001,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7318),
                            Name = "50% من الاساسى",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2002,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7339),
                            Name = "بدل جودة",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2003,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7346),
                            Name = "بدل حد ادنى",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2004,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7348),
                            Name = "2019 حافز",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2005,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7349),
                            Name = "2020 حافز",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2006,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7350),
                            Name = "2021 حافز",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2007,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7352),
                            Name = "2022 حافز",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2008,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7353),
                            Name = "بدل غلاء معيشه 2022 ",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2009,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7355),
                            Name = "حافز اضافى",
                            ParentFinancialDataTypeId = 2000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4001,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7356),
                            Name = "حافز تعويضى 2016",
                            ParentFinancialDataTypeId = 4000,
                            QanonId = 1,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FileNumber224")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FileNumber55")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FormDate")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Form");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7176),
                            Details = "مرتبات شهر مارس",
                            FileNumber224 = "1",
                            FileNumber55 = "1",
                            FormDate = "2022-3"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7179),
                            Details = "مرتبات شهر ابريل",
                            FileNumber224 = "1",
                            FileNumber55 = "1",
                            FormDate = "2022-4"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7180),
                            Details = "مرتبات شهر مايو",
                            FileNumber224 = "2",
                            FileNumber55 = "2",
                            FormDate = "2022-5"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7181),
                            Details = "مرتبات شهر يونيو",
                            FileNumber224 = "3",
                            FileNumber55 = "3",
                            FormDate = "2022-6"
                        });
                });

            modelBuilder.Entity("Domain.Models.FormEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeOrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("EmployeeId", "FormId")
                        .IsUnique();

                    b.ToTable("FormEmployees");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeFormId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Mokamel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MokamelReplacment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Taawidi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaawidiReplacment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Wazifi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WazifiReplacment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeFormId")
                        .IsUnique();

                    b.ToTable("FormEmployeeCredit");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditOrDebit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("FormEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SelectedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FormEmployeeId");

                    b.HasIndex("OrderId");

                    b.ToTable("FormEmployeeOrders");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeOrderExecuation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetItemId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormEmployeeOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BudgetItemId");

                    b.HasIndex("FormEmployeeOrderId");

                    b.ToTable("FormEmployeeOrderExecuations");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditOrDebit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("FormEmployeeId", "SubscriptionId", "CreditOrDebit")
                        .IsUnique();

                    b.ToTable("FormEmployeeSubscription");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Qunatity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormEmployeeId");

                    b.HasIndex("VacationId");

                    b.ToTable("FormEmployeeVacation");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeemDebit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Abscence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeFormId")
                        .HasColumnType("int");

                    b.Property<decimal>("Gazzaa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Insurance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Stamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subscriptions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeFormId")
                        .IsUnique();

                    b.ToTable("FormEmployeemDebit");
                });

            modelBuilder.Entity("Domain.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7409),
                            Name = "الممتازة"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7411),
                            Name = "العاليه"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7412),
                            Name = "كبير"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7413),
                            Name = "الاولى"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7416),
                            Name = "الاولى-أ",
                            ParentId = 4,
                            Priority = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7418),
                            Name = "الاولى-ب",
                            ParentId = 4,
                            Priority = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7419),
                            Name = "الثانيه"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7420),
                            Name = "الثانيه-أ",
                            ParentId = 7,
                            Priority = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7421),
                            Name = "الثانيه-ب",
                            ParentId = 7,
                            Priority = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7422),
                            Name = "الثالثه"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7423),
                            Name = "الثالثه-أ",
                            ParentId = 10,
                            Priority = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7424),
                            Name = "الثالثه-ب",
                            ParentId = 10,
                            Priority = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7426),
                            Name = "الثالثه-ج",
                            ParentId = 10,
                            Priority = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7426),
                            Name = "الرابعه"
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7428),
                            Name = "الرابعه-أ",
                            ParentId = 14,
                            Priority = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7429),
                            Name = "الرابعه-ب",
                            ParentId = 14,
                            Priority = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7430),
                            Name = "الخامسه"
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7431),
                            Name = "الخامسه-أ",
                            ParentId = 17,
                            Priority = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7432),
                            Name = "الخامسه-ب",
                            ParentId = 17,
                            Priority = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7434),
                            Name = "السادسه"
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7435),
                            Name = "السادسه-أ",
                            ParentId = 20,
                            Priority = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7436),
                            Name = "السادسه-ب",
                            ParentId = 20,
                            Priority = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.MinimumSallary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("MinimumSallary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 170m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4777),
                            GradeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 170m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4785),
                            GradeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 170m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4786),
                            GradeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 255m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4787),
                            GradeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 300m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4788),
                            GradeId = 7
                        },
                        new
                        {
                            Id = 6,
                            Amount = 340m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4790),
                            GradeId = 10
                        },
                        new
                        {
                            Id = 7,
                            Amount = 385m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4791),
                            GradeId = 14
                        },
                        new
                        {
                            Id = 8,
                            Amount = 400m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4792),
                            GradeId = 17
                        },
                        new
                        {
                            Id = 9,
                            Amount = 400m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4793),
                            GradeId = 20
                        });
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(6963),
                            Name = "غياب بدون إذن"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7038),
                            Name = "امر عقاب جزاء عن الغياب بدون إذن"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7040),
                            Name = "أمر عقاب خصم من مكافأة الامتحانات"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7041),
                            Name = "أمر أستراداد مبلغ"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7042),
                            Name = "أستقطاع مبلغ ثابت ايرادات"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7043),
                            Name = "أستقطاع مبلغ ثابت مرتدات"
                        });
                });

            modelBuilder.Entity("Domain.Models.Qanon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.HasKey("Id");

                    b.ToTable("Qanon");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7235),
                            Name = "قانون الخدمه المدنيه 81"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7236),
                            Name = "قانون تنظيم الجامعات 49"
                        });
                });

            modelBuilder.Entity("Domain.Models.RegisterdEmployeeSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("EmployeeId", "SubscriptionId")
                        .IsUnique();

                    b.ToTable("RegisterdEmployeeSubscriptions");
                });

            modelBuilder.Entity("Domain.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7384),
                            Name = "تأمين علاجى"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7386),
                            Name = "نقابه"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7387),
                            Name = "محمول شركة ETI"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7388),
                            Name = "محمول شركه سيجنال "
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7389),
                            Name = "خزنه تك  "
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 976, DateTimeKind.Local).AddTicks(7390),
                            Name = "نفقه  "
                        });
                });

            modelBuilder.Entity("Domain.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Vacation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4896),
                            Name = "اجازة بدون مرتب"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4897),
                            Name = "جزء من الوقت"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4898),
                            Name = "انتداب جزئى"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 4, 10, 1, 7, 55, 978, DateTimeKind.Local).AddTicks(4899),
                            Name = "انتداب كلى"
                        });
                });

            modelBuilder.Entity("Domain.Models.Branch", b =>
                {
                    b.HasOne("Domain.Models.Bank", "Bank")
                        .WithMany("Branches")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.HasOne("Domain.Models.EmployeeBankAccount", "EmployeeBank")
                        .WithOne("Employee")
                        .HasForeignKey("Domain.Models.Employee", "EmployeeBankId");

                    b.HasOne("Domain.Models.Qanon", "Qanon")
                        .WithMany("Employees")
                        .HasForeignKey("QanonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeBank");

                    b.Navigation("Qanon");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBankAccount", b =>
                {
                    b.HasOne("Domain.Models.Branch", "Branche")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branche");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBasicFinancialData", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("EmployeesBasicFinancialData")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.FinancialDataType", "FinancialDataTypes")
                        .WithMany("EmployeesBasicFinancialData")
                        .HasForeignKey("FinancialDataTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FinancialDataTypes");
                });

            modelBuilder.Entity("Domain.Models.EmployeeCollection", b =>
                {
                    b.HasOne("Domain.Models.Collection", "Collection")
                        .WithMany("CollectionEmployee")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeCollection")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Models.EmployeeGrade", b =>
                {
                    b.HasOne("Domain.Models.EmployeeGrade", null)
                        .WithMany("EmployeeGrades")
                        .HasForeignKey("EmployeeGradeId");

                    b.HasOne("Domain.Models.Employee", "Employees")
                        .WithMany("EmployeeGrades")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Grade", "Grade")
                        .WithMany("EmployeeGrades")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Domain.Models.EmployeeVacationExecuation", b =>
                {
                    b.HasOne("Domain.Models.BudgetItem", "BudgetItem")
                        .WithMany()
                        .HasForeignKey("BudgetItemId");

                    b.HasOne("Domain.Models.FormEmployeeVacation", "FormEmployeeVacation")
                        .WithMany("EmployeeVacationTypeExecuation")
                        .HasForeignKey("FormEmployeeVacationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BudgetItem");

                    b.Navigation("FormEmployeeVacation");
                });

            modelBuilder.Entity("Domain.Models.FinancialDataType", b =>
                {
                    b.HasOne("Domain.Models.FinancialDataType", "ParentFinancialDataType")
                        .WithMany("ChildsElements")
                        .HasForeignKey("ParentFinancialDataTypeId");

                    b.HasOne("Domain.Models.Qanon", "Qanon")
                        .WithMany("FinancialDataTypes")
                        .HasForeignKey("QanonId");

                    b.Navigation("ParentFinancialDataType");

                    b.Navigation("Qanon");
                });

            modelBuilder.Entity("Domain.Models.FormEmployee", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("FormEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Form", "Form")
                        .WithMany("FormEmployees")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeCredit", b =>
                {
                    b.HasOne("Domain.Models.FormEmployee", "FormEmployee")
                        .WithOne("Credit")
                        .HasForeignKey("Domain.Models.FormEmployeeCredit", "EmployeeFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormEmployee");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeOrder", b =>
                {
                    b.HasOne("Domain.Models.FormEmployee", "FormEmployee")
                        .WithMany("FormEmployeeOrders")
                        .HasForeignKey("FormEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany("FormEmployeeOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormEmployee");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeOrderExecuation", b =>
                {
                    b.HasOne("Domain.Models.BudgetItem", "BudgetItem")
                        .WithMany("EmployeeOrderExecuations")
                        .HasForeignKey("BudgetItemId");

                    b.HasOne("Domain.Models.FormEmployeeOrder", "FormEmployeeOrder")
                        .WithMany("FormEmployeeOrderExecuations")
                        .HasForeignKey("FormEmployeeOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BudgetItem");

                    b.Navigation("FormEmployeeOrder");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeSubscription", b =>
                {
                    b.HasOne("Domain.Models.FormEmployee", "FormEmployee")
                        .WithMany("FormEmployeeSubscriptions")
                        .HasForeignKey("FormEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subscription", "Subscription")
                        .WithMany("FormEmployeeSubscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormEmployee");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeVacation", b =>
                {
                    b.HasOne("Domain.Models.FormEmployee", "FormEmployee")
                        .WithMany("FormEmployeeVacations")
                        .HasForeignKey("FormEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Vacation", "Vacation")
                        .WithMany("EmployeeVacationTypes")
                        .HasForeignKey("VacationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormEmployee");

                    b.Navigation("Vacation");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeemDebit", b =>
                {
                    b.HasOne("Domain.Models.FormEmployee", "EmployeeForm")
                        .WithOne("Debit")
                        .HasForeignKey("Domain.Models.FormEmployeemDebit", "EmployeeFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeForm");
                });

            modelBuilder.Entity("Domain.Models.Grade", b =>
                {
                    b.HasOne("Domain.Models.Grade", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Domain.Models.MinimumSallary", b =>
                {
                    b.HasOne("Domain.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Domain.Models.RegisterdEmployeeSubscription", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("RegisterdEmployeeSubscriptions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subscription", "Subscription")
                        .WithMany("RegisterdEmployeeSubscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Domain.Models.Bank", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("Domain.Models.BudgetItem", b =>
                {
                    b.Navigation("EmployeeOrderExecuations");
                });

            modelBuilder.Entity("Domain.Models.Collection", b =>
                {
                    b.Navigation("CollectionEmployee");
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Navigation("EmployeeCollection");

                    b.Navigation("EmployeeGrades");

                    b.Navigation("EmployeesBasicFinancialData");

                    b.Navigation("FormEmployees");

                    b.Navigation("RegisterdEmployeeSubscriptions");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBankAccount", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Models.EmployeeGrade", b =>
                {
                    b.Navigation("EmployeeGrades");
                });

            modelBuilder.Entity("Domain.Models.FinancialDataType", b =>
                {
                    b.Navigation("ChildsElements");

                    b.Navigation("EmployeesBasicFinancialData");
                });

            modelBuilder.Entity("Domain.Models.Form", b =>
                {
                    b.Navigation("FormEmployees");
                });

            modelBuilder.Entity("Domain.Models.FormEmployee", b =>
                {
                    b.Navigation("Credit");

                    b.Navigation("Debit");

                    b.Navigation("FormEmployeeOrders");

                    b.Navigation("FormEmployeeSubscriptions");

                    b.Navigation("FormEmployeeVacations");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeOrder", b =>
                {
                    b.Navigation("FormEmployeeOrderExecuations");
                });

            modelBuilder.Entity("Domain.Models.FormEmployeeVacation", b =>
                {
                    b.Navigation("EmployeeVacationTypeExecuation");
                });

            modelBuilder.Entity("Domain.Models.Grade", b =>
                {
                    b.Navigation("EmployeeGrades");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Navigation("FormEmployeeOrders");
                });

            modelBuilder.Entity("Domain.Models.Qanon", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("FinancialDataTypes");
                });

            modelBuilder.Entity("Domain.Models.Subscription", b =>
                {
                    b.Navigation("FormEmployeeSubscriptions");

                    b.Navigation("RegisterdEmployeeSubscriptions");
                });

            modelBuilder.Entity("Domain.Models.Vacation", b =>
                {
                    b.Navigation("EmployeeVacationTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
