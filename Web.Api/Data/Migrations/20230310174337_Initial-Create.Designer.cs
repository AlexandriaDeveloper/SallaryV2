// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Web.Api.Data.Migrations
{
    [DbContext(typeof(SallaryCQRSAppContext))]
    [Migration("20230310174337_Initial-Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("Domain.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("Domain.Models.BudgetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("BudgetItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2077),
                            Name = "اجر وظيفى "
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2078),
                            Name = "اجر مكمل"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2079),
                            Name = "أجر تعويضى"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2080),
                            Name = "جزاء"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2081),
                            Name = "إيرادات"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2082),
                            Name = "مرتدات"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2083),
                            Name = "أسترداد"
                        });
                });

            modelBuilder.Entity("Domain.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Collection");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(257),
                            Name = "مرتبات بطاقات حكوميه"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(259),
                            Name = "مرتبات تحويلات بنكيه"
                        });
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CollageName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeBankId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Section")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("TabCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("TegaraCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeBankId")
                        .IsUnique()
                        .HasFilter("[EmployeeBankId] IS NOT NULL");

                    b.HasIndex("NationalId")
                        .IsUnique();

                    b.HasIndex("TabCode")
                        .IsUnique()
                        .HasFilter("[TabCode] IS NOT NULL");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("EmployeeBanks");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBasicFinancialData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialDataTypesId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDataTypesId");

                    b.HasIndex("EmployeeId", "FinancialDataTypesId")
                        .IsUnique();

                    b.ToTable("EmployeeBasicFinancialData");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBasicSallary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BasicSallary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Mokamel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Taawidi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Wazifi")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYearId");

                    b.HasIndex("EmployeeId", "FinancialYearId")
                        .IsUnique();

                    b.ToTable("EmployeeBasicSallaries");
                });

            modelBuilder.Entity("Domain.Models.EmployeeCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeOrderInCollection")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("EmployeeId", "CollectionId")
                        .IsUnique();

                    b.ToTable("EmployeeCollections");
                });

            modelBuilder.Entity("Domain.Models.EmployeeForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeOrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("EmployeeId", "FormId")
                        .IsUnique();

                    b.ToTable("EmployeeForms");
                });

            modelBuilder.Entity("Domain.Models.EmployeeFormCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeFormId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Mokamel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MokamelReplacment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Taawidi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaawidiReplacment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Wazifi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WazifiReplacment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeFormId")
                        .IsUnique();

                    b.ToTable("EmployeeFormCredit");
                });

            modelBuilder.Entity("Domain.Models.EmployeeFormDebit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Abscence")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeFormId")
                        .HasColumnType("int");

                    b.Property<decimal>("Gazzaa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Insurance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Stamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subscriptions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeFormId")
                        .IsUnique();

                    b.ToTable("EmployeeFormDebit");
                });

            modelBuilder.Entity("Domain.Models.EmployeeGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeGradeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartFrom")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeGradeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("EmployeeId", "GradeId")
                        .IsUnique();

                    b.ToTable("EmployeeGrades");
                });

            modelBuilder.Entity("Domain.Models.EmployeeOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditOrDebit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FormId");

                    b.HasIndex("OrderId");

                    b.ToTable("EmployeeOrders");
                });

            modelBuilder.Entity("Domain.Models.EmployeeOrderExecuation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetItemId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeOrderId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetItemId");

                    b.HasIndex("EmployeeOrderId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("EmployeeOrderExecuations");
                });

            modelBuilder.Entity("Domain.Models.EmployeePartTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartFrom")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeesPartTimes");
                });

            modelBuilder.Entity("Domain.Models.EmployeeSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("EmployeeId", "SubscriptionId")
                        .IsUnique();

                    b.ToTable("EmployeeSubscriptions");
                });

            modelBuilder.Entity("Domain.Models.EmployeeVacationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Qunatity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeOrderId")
                        .IsUnique();

                    b.HasIndex("VacationTypeId");

                    b.ToTable("EmployeeVacationType");
                });

            modelBuilder.Entity("Domain.Models.FinancialDataType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentFinancialDataTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentFinancialDataTypeId");

                    b.ToTable("FinancialDataTypes");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2130),
                            Name = "اجر وظيفى ",
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2131),
                            Name = "اجر مكمل",
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2132),
                            Name = "اجمالى الاجر ",
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2133),
                            Name = "حافز تعويضى",
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5000,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2159),
                            Name = "اجر الشامل",
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1002,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2164),
                            Name = "الاساسى",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1003,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2166),
                            Name = "100% من الاساسى",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1004,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2170),
                            Name = "بدل حد ادنى",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1005,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2181),
                            Name = "علاوات غير مضمومه",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1006,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2183),
                            Name = "بدل علاوة اجتماعيه و منحة",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1007,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2184),
                            Name = "علاوة دوريه 2015",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2015, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1008,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2186),
                            Name = "علاوة دوريه 2016",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2016, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1009,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2187),
                            Name = "علاوة دوريه 2017",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2017, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1010,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2189),
                            Name = "علاوة استثنائيه 2017",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2017, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1011,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2190),
                            Name = "علاوة دوريه 2018",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2018, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1012,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2191),
                            Name = "علاوة استثنائيه 2018",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2018, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1013,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2193),
                            Name = "علاوة دوريه 2019",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1014,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2194),
                            Name = "علاوة دوريه 2020",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1015,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2195),
                            Name = "علاوة دوريه 2021",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1016,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2197),
                            Name = "علاوة دوريه 2022",
                            ParentFinancialDataTypeId = 1000,
                            ReservationDate = new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3001,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2198),
                            Name = "الاساسى",
                            ParentFinancialDataTypeId = 3000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3002,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2199),
                            Name = "علاوات غير مضمومه",
                            ParentFinancialDataTypeId = 3000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3003,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2200),
                            Name = "المنحة",
                            ParentFinancialDataTypeId = 3000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3004,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2202),
                            Name = "علاوة اجتماعيه",
                            ParentFinancialDataTypeId = 3000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3005,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2203),
                            Name = "علاوة اضافيه",
                            ParentFinancialDataTypeId = 3000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3006,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2204),
                            Name = "بدل عدوى",
                            ParentFinancialDataTypeId = 3000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3007,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2205),
                            Name = "150% من الاساسى",
                            ParentFinancialDataTypeId = 3000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2001,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2207),
                            Name = "50% من الاساسى",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2002,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2208),
                            Name = "بدل جودة",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2003,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2213),
                            Name = "بدل حد ادنى",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2004,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2214),
                            Name = "2019 حافز",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2005,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2216),
                            Name = "2020 حافز",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2006,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2217),
                            Name = "2021 حافز",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2007,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2218),
                            Name = "2022 حافز",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2008,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2219),
                            Name = "بدل غلاء معيشه 2022 ",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2009,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2221),
                            Name = "حافز اضافى",
                            ParentFinancialDataTypeId = 2000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4001,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2222),
                            Name = "حافز تعويضى 2016",
                            ParentFinancialDataTypeId = 4000,
                            ReservationDate = new DateTime(2015, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Domain.Models.FinancialYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("FinancialYears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2105),
                            Name = "العام المالى 2017-2018"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2106),
                            Name = "العام المالى 2018-2019"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2107),
                            Name = "العام المالى 2020-2019"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2108),
                            Name = "العام المالى 2021-2020"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2109),
                            Name = "العام المالى 2022-2021"
                        });
                });

            modelBuilder.Entity("Domain.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FileNumber224")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FileNumber55")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FormDate")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Form");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2045),
                            Details = "مرتبات شهر مارس",
                            FileNumber224 = "1",
                            FileNumber55 = "1",
                            FormDate = "2022-3"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2048),
                            Details = "مرتبات شهر ابريل",
                            FileNumber224 = "1",
                            FileNumber55 = "1",
                            FormDate = "2022-4"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2050),
                            Details = "مرتبات شهر مايو",
                            FileNumber224 = "2",
                            FileNumber55 = "2",
                            FormDate = "2022-5"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2051),
                            Details = "مرتبات شهر يونيو",
                            FileNumber224 = "3",
                            FileNumber55 = "3",
                            FormDate = "2022-6"
                        });
                });

            modelBuilder.Entity("Domain.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2273),
                            Name = "الممتازة"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2274),
                            Name = "العاليه"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2275),
                            Name = "كبير"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2276),
                            Name = "الاولى"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2279),
                            Name = "الاولى-أ",
                            ParentId = 4,
                            Priority = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2280),
                            Name = "الاولى-ب",
                            ParentId = 4,
                            Priority = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2281),
                            Name = "الثانيه"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2282),
                            Name = "الثانيه-أ",
                            ParentId = 7,
                            Priority = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2323),
                            Name = "الثانيه-ب",
                            ParentId = 7,
                            Priority = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2324),
                            Name = "الثالثه"
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2325),
                            Name = "الثالثه-أ",
                            ParentId = 10,
                            Priority = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2327),
                            Name = "الثالثه-ب",
                            ParentId = 10,
                            Priority = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2328),
                            Name = "الثالثه-ج",
                            ParentId = 10,
                            Priority = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2329),
                            Name = "الرابعه"
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2330),
                            Name = "الرابعه-أ",
                            ParentId = 14,
                            Priority = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2331),
                            Name = "الرابعه-ب",
                            ParentId = 14,
                            Priority = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2332),
                            Name = "الخامسه"
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2333),
                            Name = "الخامسه-أ",
                            ParentId = 17,
                            Priority = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2335),
                            Name = "الخامسه-ب",
                            ParentId = 17,
                            Priority = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2336),
                            Name = "السادسه"
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2337),
                            Name = "السادسه-أ",
                            ParentId = 20,
                            Priority = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2338),
                            Name = "السادسه-ب",
                            ParentId = 20,
                            Priority = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.MinimumSallary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("MinimumSallary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 170m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(152),
                            GradeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 170m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(157),
                            GradeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 170m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(158),
                            GradeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 255m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(159),
                            GradeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 300m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(160),
                            GradeId = 7
                        },
                        new
                        {
                            Id = 6,
                            Amount = 340m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(161),
                            GradeId = 10
                        },
                        new
                        {
                            Id = 7,
                            Amount = 385m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(163),
                            GradeId = 14
                        },
                        new
                        {
                            Id = 8,
                            Amount = 400m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(164),
                            GradeId = 17
                        },
                        new
                        {
                            Id = 9,
                            Amount = 400m,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(193),
                            GradeId = 20
                        });
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(1896),
                            Name = "غياب بدون إذن"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(1911),
                            Name = "امر عقاب جزاء عن الغياب بدون إذن"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(1913),
                            Name = "أمر عقاب خصم من مكافأة الامتحانات"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(1914),
                            Name = "أمر أستراداد مبلغ"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(1915),
                            Name = "أستقطاع مبلغ ثابت ايرادات"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(1916),
                            Name = "أستقطاع مبلغ ثابت مرتدات"
                        });
                });

            modelBuilder.Entity("Domain.Models.PeriodicSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditOrDebit")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("EmployeeId", "FormId", "SubscriptionId", "CreditOrDebit")
                        .IsUnique();

                    b.ToTable("PeriodicSubscription");
                });

            modelBuilder.Entity("Domain.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2248),
                            Name = "تأمين علاجى"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2250),
                            Name = "نقابه"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2250),
                            Name = "محمول شركة ETI"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2252),
                            Name = "محمول شركه سيجنال "
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2253),
                            Name = "خزنه تك  "
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 516, DateTimeKind.Local).AddTicks(2254),
                            Name = "نفقه  "
                        });
                });

            modelBuilder.Entity("Domain.Models.VacationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("VacationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(282),
                            Name = "اجازة بدون مرتب"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(284),
                            Name = "جزء من الوقت"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(284),
                            Name = "انتداب جزئى"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 3, 10, 19, 43, 35, 518, DateTimeKind.Local).AddTicks(286),
                            Name = "انتداب كلى"
                        });
                });

            modelBuilder.Entity("Domain.Models.Branch", b =>
                {
                    b.HasOne("Domain.Models.Bank", "Bank")
                        .WithMany("Branches")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.HasOne("Domain.Models.EmployeeBank", "EmployeeBank")
                        .WithOne("Employee")
                        .HasForeignKey("Domain.Models.Employee", "EmployeeBankId");

                    b.Navigation("EmployeeBank");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBank", b =>
                {
                    b.HasOne("Domain.Models.Branch", "Branche")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branche");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBasicFinancialData", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("EmployeesBasicFinancialData")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.FinancialDataType", "FinancialDataTypes")
                        .WithMany("EmployeesBasicFinancialData")
                        .HasForeignKey("FinancialDataTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FinancialDataTypes");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBasicSallary", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeBasicSallaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.FinancialYear", "FinancialYear")
                        .WithMany("EmployeeBasicSallaries")
                        .HasForeignKey("FinancialYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FinancialYear");
                });

            modelBuilder.Entity("Domain.Models.EmployeeCollection", b =>
                {
                    b.HasOne("Domain.Models.Collection", "Collection")
                        .WithMany("CollectionEmployee")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeCollection")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Models.EmployeeForm", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("Domain.Models.EmployeeFormCredit", b =>
                {
                    b.HasOne("Domain.Models.EmployeeForm", "EmployeeForm")
                        .WithOne("Credit")
                        .HasForeignKey("Domain.Models.EmployeeFormCredit", "EmployeeFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeForm");
                });

            modelBuilder.Entity("Domain.Models.EmployeeFormDebit", b =>
                {
                    b.HasOne("Domain.Models.EmployeeForm", "EmployeeForm")
                        .WithOne("Debit")
                        .HasForeignKey("Domain.Models.EmployeeFormDebit", "EmployeeFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeForm");
                });

            modelBuilder.Entity("Domain.Models.EmployeeGrade", b =>
                {
                    b.HasOne("Domain.Models.EmployeeGrade", null)
                        .WithMany("EmployeeGrades")
                        .HasForeignKey("EmployeeGradeId");

                    b.HasOne("Domain.Models.Employee", "Employees")
                        .WithMany("EmployeeGrades")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Grade", "Grade")
                        .WithMany("EmployeeGrades")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Domain.Models.EmployeeOrder", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Form", "Form")
                        .WithMany("EmployeeOrders")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Order", "Order")
                        .WithMany("EmployeeOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Form");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Domain.Models.EmployeeOrderExecuation", b =>
                {
                    b.HasOne("Domain.Models.BudgetItem", "BudgetItem")
                        .WithMany("EmployeeOrderExecuations")
                        .HasForeignKey("BudgetItemId");

                    b.HasOne("Domain.Models.EmployeeOrder", "EmployeeOrder")
                        .WithMany("EmployeeOrderExecuations")
                        .HasForeignKey("EmployeeOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId");

                    b.Navigation("BudgetItem");

                    b.Navigation("EmployeeOrder");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Domain.Models.EmployeePartTime", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("PartTimeDurations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Models.EmployeeSubscription", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("EmployeeSubscriptions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subscription", "Subscription")
                        .WithMany("EmployeeSubscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Domain.Models.EmployeeVacationType", b =>
                {
                    b.HasOne("Domain.Models.Employee", null)
                        .WithMany("EmployeeVacationType")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Domain.Models.EmployeeOrder", "EmployeeOrder")
                        .WithOne("EmployeeVacationType")
                        .HasForeignKey("Domain.Models.EmployeeVacationType", "EmployeeOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.VacationType", "VacationType")
                        .WithMany("EmployeeVacationTypes")
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeOrder");

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("Domain.Models.FinancialDataType", b =>
                {
                    b.HasOne("Domain.Models.FinancialDataType", "ParentFinancialDataType")
                        .WithMany("ChildsElements")
                        .HasForeignKey("ParentFinancialDataTypeId");

                    b.Navigation("ParentFinancialDataType");
                });

            modelBuilder.Entity("Domain.Models.Grade", b =>
                {
                    b.HasOne("Domain.Models.Grade", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Domain.Models.MinimumSallary", b =>
                {
                    b.HasOne("Domain.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("Domain.Models.PeriodicSubscription", b =>
                {
                    b.HasOne("Domain.Models.Employee", "Employee")
                        .WithMany("PeriodicSubscriptions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Form", "Form")
                        .WithMany("PeriodicSubscription")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Subscription", "Subscription")
                        .WithMany("PeriodicSubscription")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Form");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Domain.Models.Bank", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("Domain.Models.BudgetItem", b =>
                {
                    b.Navigation("EmployeeOrderExecuations");
                });

            modelBuilder.Entity("Domain.Models.Collection", b =>
                {
                    b.Navigation("CollectionEmployee");
                });

            modelBuilder.Entity("Domain.Models.Employee", b =>
                {
                    b.Navigation("EmployeeBasicSallaries");

                    b.Navigation("EmployeeCollection");

                    b.Navigation("EmployeeGrades");

                    b.Navigation("EmployeeOrders");

                    b.Navigation("EmployeeSubscriptions");

                    b.Navigation("EmployeeVacationType");

                    b.Navigation("EmployeesBasicFinancialData");

                    b.Navigation("PartTimeDurations");

                    b.Navigation("PeriodicSubscriptions");
                });

            modelBuilder.Entity("Domain.Models.EmployeeBank", b =>
                {
                    b.Navigation("Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.EmployeeForm", b =>
                {
                    b.Navigation("Credit")
                        .IsRequired();

                    b.Navigation("Debit")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.EmployeeGrade", b =>
                {
                    b.Navigation("EmployeeGrades");
                });

            modelBuilder.Entity("Domain.Models.EmployeeOrder", b =>
                {
                    b.Navigation("EmployeeOrderExecuations");

                    b.Navigation("EmployeeVacationType");
                });

            modelBuilder.Entity("Domain.Models.FinancialDataType", b =>
                {
                    b.Navigation("ChildsElements");

                    b.Navigation("EmployeesBasicFinancialData");
                });

            modelBuilder.Entity("Domain.Models.FinancialYear", b =>
                {
                    b.Navigation("EmployeeBasicSallaries");
                });

            modelBuilder.Entity("Domain.Models.Form", b =>
                {
                    b.Navigation("EmployeeOrders");

                    b.Navigation("PeriodicSubscription");
                });

            modelBuilder.Entity("Domain.Models.Grade", b =>
                {
                    b.Navigation("EmployeeGrades");
                });

            modelBuilder.Entity("Domain.Models.Order", b =>
                {
                    b.Navigation("EmployeeOrder");
                });

            modelBuilder.Entity("Domain.Models.Subscription", b =>
                {
                    b.Navigation("EmployeeSubscriptions");

                    b.Navigation("PeriodicSubscription");
                });

            modelBuilder.Entity("Domain.Models.VacationType", b =>
                {
                    b.Navigation("EmployeeVacationTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
